(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{507:function(e,s,n){"use strict";n.r(s);var a=n(2),t=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"understanding-asynchronous-code-and-api-s"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#understanding-asynchronous-code-and-api-s"}},[e._v("#")]),e._v(" UnderStanding Asynchronous Code, and API's")]),e._v(" "),n("p",[n("strong",[e._v("1.")]),e._v(" What is the difference between "),n("code",[e._v("asynchronous")]),e._v(" code and "),n("code",[e._v("synchronous")]),e._v(" code?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Synchronous code--\x3e It is dependent on the other block of code.The code only executes if the other code prior to it is completed, which means in a consistent order.\nFor Example:\nPROCESS 1 --\x3e PROCESS2 --\x3e PROCESS3 --\x3e PROCESS4\n\nAsynchronous code--\x3e It is entirely independent of the other code. it does not matter if one code has started or stopped, there is no need to check on other code.\nFor Example:\nPROCESS1        PROCESS4\n     PROCESS3  PROCESS2\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[n("strong",[e._v("2.")]),e._v(" What is an event listener?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("An event listener is a process that waits for an event to occur. For example, clicking a mouse or pressing a key etc\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("strong",[e._v("3.")]),e._v(" What does the "),n("code",[e._v("O")]),e._v(" represent in the "),n("code",[e._v("SOLID")]),e._v(" principles?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("O in SOLID principles stands for Open-Closed Principle: Objects should be open for extension but closed for modification.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("strong",[e._v("4.")]),e._v(" What is a callback / higher order function?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Callback/ higher order function--\x3e These are the functions that are passed as parameters to be called later.These functions will run after the other function is finished.\nCommonly used callback functions are: map, find and filter.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[n("strong",[e._v("5.")]),e._v(" What is a "),n("code",[e._v("promise")]),e._v("? How do you capture an error from a "),n("code",[e._v("promise")]),e._v("?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Promise--\x3e It means instead of immediately returning the final value, the asynchronous method returns a promise to supply the value at some point in future.\nIt is created by using a 'new' keyword.\nA promise has three states:\nPending--\x3e The promise is started but not finished.\nFulfilled--\x3e The promise is completed successfully.\nRejected--\x3e The promise has failed.\n.then and .catch methods are used on promise for success or failure\n.catch method is used to capture an error from a promise\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[n("strong",[e._v("6.")]),e._v(" Name three processes used to make requests over "),n("code",[e._v("HTTP")]),e._v("?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("1. Using `$.ajax` : This allows to create a GET,POST,PUT or DELETE methods.\n2. Using `$.get` : With `$.get`, it takes the URL as the first parameter and callback as the second.\n3. Using `$.post` : It requests the inputs change. and takes the URL, the Data and the callback as parameters.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[n("strong",[e._v("7.")]),e._v(" What does the "),n("code",[e._v("API")]),e._v(" acronym stand for?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("API--\x3e Application Program Interface, is a messenger that takes requests, translates and returns response.\nFor Example: In a restaurant, a waiter acts as an APi, takes your order, translates it to the kitchen and returns your food.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[n("strong",[e._v("8.")]),e._v(" In the "),n("code",[e._v("MVC")]),e._v(" design pattern, who is responsible for making calls to "),n("code",[e._v("APIs")]),e._v("?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Controller is responsible for contacting any APIs, services, databases, etc.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("strong",[e._v("9.")]),e._v(" What is the purpose of encapsulation in programming?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("It is used for hiding the values of an object inside a class, to prevent the direct access of unauthorized parties.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("strong",[e._v("10.")]),e._v(" What is "),n("code",[e._v("HTTP")]),e._v(" response code for a successful request?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("HTTP response code for a successful request is : 200-299\nFor Example:\n200 OK : Meaning the success depends on the HTTP methods like : GET, PUT, POSt, etc.\n202 Accepted : The request has been received but not yet acted upon.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[n("strong",[e._v("11.")]),e._v(" What is a 500 error?\n")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("The HyperText Transfer Protocol(HTTP) 500 internal server error, indicates that the server encountered an unexpected condition that prevented it from doing the request.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);